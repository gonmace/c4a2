---
import { languages } from '../i18n/ui';
import { getLangFromUrl } from '../i18n/utils.ts';

const currentPath = Astro.url.pathname;
const currentLang = getLangFromUrl(Astro.url);
const path = currentPath.replace(`/${currentLang}`, '');

const flags: Record<keyof typeof languages, string> = {
  en: "ðŸ‡ºðŸ‡¸",
  es: "ðŸ‡ªðŸ‡¸"
};

const { class: className = "" } = Astro.props;

// Obtener el idioma alternativo
const alternativeLang = currentLang === 'es' ? 'en' : 'es';
const alternativeLabel = languages[alternativeLang];
const alternativeFlag = flags[alternativeLang];
---

<div class="language-picker flex items-center mr-4">
  <button 
    id="language-button" 
    class=`bg-transparent px-2 py-1 text-${className} cursor-pointer focus:outline-none hover:bg-primary/20 transition-colors`
    data-href={`/${alternativeLang}${path}`}
  >
    {`${alternativeFlag} ${alternativeLabel}`}
  </button>
</div>

<script>
  const button = document.getElementById('language-button');
  button?.addEventListener('click', () => {
    const href = button.getAttribute('data-href');
    if (href) {
      window.location.href = href;
    }
  });
</script>

<style>
.language-picker {
  position: relative;
}
</style>