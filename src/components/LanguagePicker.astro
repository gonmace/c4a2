---
import { languages } from '../i18n/ui';
import { getLangFromUrl } from '../i18n/utils.ts';

const currentPath = Astro.url.pathname;
const currentLang = getLangFromUrl(Astro.url);
const path = currentPath.replace(`/${currentLang}`, '');

const flags: Record<keyof typeof languages, string> = {
  en: "ðŸ‡ºðŸ‡¸",
  es: "ðŸ‡ªðŸ‡¸"
};

const { class: className = "" } = Astro.props;
---

<div class="language-picker flex items-center mr-4">
  <select 
    id="language-select" 
    class=`bg-transparent border border-${className} rounded-md px-2 py-1 text-${className} cursor-pointer focus:outline-none focus:ring-2 focus:ring-accent`
  >
    {Object.entries(languages).map(([lang, label]) => (
      <option 
        value={`/${lang}${path}`} 
        selected={currentLang === lang}
        class="bg-gray-900"
      >
        {`${flags[lang as keyof typeof languages]} ${label}`}
      </option>
    ))}
  </select>
</div>

<script>
  const select = document.getElementById('language-select') as HTMLSelectElement;
  select?.addEventListener('change', (e) => {
    const target = e.target as HTMLSelectElement;
    window.location.href = target.value;
  });
</script>

<style>
.language-picker {
  position: relative;
}

.language-picker select {
  appearance: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  padding-right: 2rem;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 24 24' stroke='white'%3E%3Cpath stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M19 9l-7 7-7-7'%3E%3C/path%3E%3C/svg%3E");
  background-repeat: no-repeat;
  background-position: right 0.5rem center;
  background-size: 1.2em;
}

.language-picker select option {
  padding: 0.5rem;
}
</style>