---
import "../styles/global.css";
import Header from '../components/Header.astro';
import Layout from '../layouts/MainLayout.astro';
import FeatureCard from '../components/FeatureCard.astro';

import { getLangFromUrl, useTranslations } from '../i18n/utils';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

export async function getStaticPaths() {
  return [
    { params: { locale: 'en' } },
    { params: { locale: 'es' } },
  ];
}

const { title, description } = Astro.props;

---

<Layout 
  title={title} 
  description={description}
>
<Header class="mx-auto w-full z-50" textColorNav="primary" />
<main class="z-0 overflow-x-hidden mx-auto">

	<!-- Banner -->

	  <section class="z-10 max-w-6xl mx-auto px-4">
		<!-- Who we are? -->
		<div class="lg:container mx-auto items-center z-10">
	  
			<div class="flex flex-wrap pt-32 pb-5">      
			  <div class="md:w-1/3">
				<h2 class="text-primary border-l-4 border-secondary tracking-wider p-6 m-1 uppercase text-2xl md:text-3xl font-light">{t('wwa.title')}</h2>
			  </div>  
			  <div class="md:w-2/3 px-6 flex">
				<h4 class="m-auto text-lg leading-relaxed opacity-90">{t('wwa.description')}</h4>
			  </div>
			</div>
		</div>
	  
		<div class="divider mb-10 border-t border-gray-200/20"></div> 
	  
		<!-- FEATURES 1 Services -->
		<div id="services" class="space-y-32">
		  
		  <FeatureCard
        title={t('features.creativity.title')}
        imageUrl="/images/creativity.png"
        imageAlt={t('features.creativity.title')}
        description={t('features.creativity.description')}
      />
    
      <FeatureCard
        title={t('features.connectivity.title')}
        imageUrl="/images/connectivity.png"
        imageAlt={t('features.connectivity.title')}
        description={t('features.connectivity.description')}
        reverseLayout={true}
      />
    
      <FeatureCard
        title={t('features.collaboration.title')}
        imageUrl="/images/collaboration.png"
        imageAlt={t('features.collaboration.title')}
        description={t('features.collaboration.description')}
      />
    
      <FeatureCard
        title={t('features.capacity.title')}
        imageUrl="/images/capacity_building2.png"
        imageAlt={t('features.capacity.title')}
        description={t('features.capacity.description')}
        reverseLayout={true}
      />
		
		</div>
	  
	  </section>
  </main>
</Layout> 

<script>

// Importaciones
import anime from "animejs";
import Rellax from "rellax";
import jQuery from "jquery";
const $ = jQuery;

document.addEventListener("DOMContentLoaded", function () {
  // InicializaciÃ³n de Rellax
  const rellax = new Rellax(".rellax");

  const homeSection = $("#banner");
  const navbar = $("nav");
  let navChange = false;
  const navHeight = navbar.height() || 0;

  window.addEventListener('scroll', () => {
    effectsHomeSection(homeSection, window);
  });

  function effectsHomeSection(homeSection: JQuery<HTMLElement>, scrollTopp: any): void {
	
    if (homeSection.length > 0) {
	
      const homeSHeight = homeSection.height() || 0;
		
      if (homeSHeight - navHeight <= $(scrollTopp).scrollTop()!) {
        if (!navChange) {
          requestAnimationFrame(() => {
            navbar.addClass("!bg-primary");
            navChange = true;
          });
        }
      } else {
        if (navChange) {
          requestAnimationFrame(() => {
            navbar.removeClass("!bg-primary");
            navChange = false;
          });
        }
      }
    }
  }

  // Animaciones con anime.js
  const tl = anime.timeline({
    easing: "easeOutExpo",
  });

  tl.add({
    targets: "#izq",
    translateX: ["-200%", 0],
    duration: 4000,
  });

  tl.add(
    {
      targets: "#der",
      translateX: ["200%", 0],
      duration: 4000,
    },
    "-=4000"
  );

  const textcommons = document.querySelector('.commons');
  const textall = document.querySelector('.all');

  if (textcommons && textall) {
    textcommons.innerHTML = textcommons.textContent?.replace(/\S/g, "<span class='letter'>$&</span>") || '';
    textall.innerHTML = textall.textContent?.replace(/\S/g, "<span class='letter'>$&</span>") || '';
  }

  const tl2 = anime.timeline();
  tl2.add({
    targets: '.commons .letter',
    translateX: [-400,0],
    translateZ: 0,
    opacity: [0,1],
    easing: "easeOutExpo",
    duration: 3500,
    delay: (_el: any, i: number) => 500 - 60 * i
  });

  tl2.add({
    targets: '.all .letter',
    translateX: [+400,0],
    translateZ: 0,
    opacity: [0,1],
    easing: "easeOutExpo",
    duration: 3500,
    delay: (_el: any, i: number) => -500 + 60 * i
  }, "-=3500");

  tl2.add({
    targets: '.four',
    translateZ: 0,
    opacity: [0,1],
    scale: [0,1],
    easing: "easeOutExpo",
    duration: 3000
  },"-=2000");
});



</script>